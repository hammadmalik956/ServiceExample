name: Application CI - Test, Build, Push & Sign

on:
  push:
    paths:
      - 'ServiceExample/**'
      - 'UnitTests/**'

permissions:
  id-token: write   
  contents: read     

env:
  AWS_REGION: us-east-2           
  ECR_REPOSITORY: serviceexample
  PUBLIC_ECR_URI: public.ecr.aws/a1f9o5p6
  DOTNET_VERSION: 9.0

jobs:
  build-test-push-sign:
    runs-on: ubuntu-latest
    name: Test, Build, Push, and Sign Docker Image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::055545057328:role/gh-oidc-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore .NET Dependencies
        working-directory: UnitTests
        run: dotnet restore

      - name: Run Unit Tests
        working-directory: UnitTests
        run: dotnet test 

      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{ env.PUBLIC_ECR_URI }}

      - name: Build Docker Image
        working-directory: ServiceExample
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker build -t ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .

      - name: Tag Docker Image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker tag ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG \
            ${{ env.PUBLIC_ECR_URI }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Push Docker Image to Public ECR
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          docker push ${{ env.PUBLIC_ECR_URI }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      # - name: Sign Docker Image with AWS Signer
      #   run: |
      #     IMAGE_TAG=${{ github.sha }}
      #     IMAGE_URI=${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          
      #     echo "Starting AWS Signer signing job for $IMAGE_URI"
          
      #     JOB_ID=$(aws signer start-signing-job \
      #       --source "image=${IMAGE_URI}" \
      #       --destination '{"type": "ecr"}' \
      #       --region ${{ env.AWS_REGION }} \
      #       --profile default \
      #       --query 'jobId' --output text)

      #     echo "Started signing job: $JOB_ID"

      #     # Wait until signing job completes
      #     aws signer wait signing-job-completed \
      #       --job-id "$JOB_ID" \
      #       --region ${{ env.AWS_REGION }}

      #     echo "Docker image signed successfully: $IMAGE_URI"

