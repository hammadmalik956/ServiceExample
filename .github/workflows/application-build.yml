name: Application CI - Test, Build, Push & Sign

on:
  push:
    paths:
      - 'ServiceExample/**'
      - 'UnitTests/**'

permissions:
  id-token: write   
  contents: read     

env:
  ECR_REPOSITORY: serviceexample
  PUBLIC_ECR_URI: public.ecr.aws/a1f9o5p6
  DOTNET_VERSION: 9.0

jobs:
  build-test-push-sign:
    runs-on: ubuntu-latest
    name: Test, Build, Push, and Sign Docker Image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore .NET Dependencies
        working-directory: UnitTests
        run: dotnet restore

      - name: Run Unit Tests
        working-directory: UnitTests
        run: dotnet test 

      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.PUBLIC_ECR_URI }}

      - name: Build Docker Image
        working-directory: ServiceExample
        run: |
          IMAGE_TAG=${GITHUB_RUN_NUMBER}
          docker build -t ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .

      - name: Tag Docker Image
        run: |
          IMAGE_TAG=${GITHUB_RUN_NUMBER}
          docker tag ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG \
            ${{ env.PUBLIC_ECR_URI }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Push Docker Image to Public ECR
        run: |
          IMAGE_TAG=${GITHUB_RUN_NUMBER}
          docker push ${{ env.PUBLIC_ECR_URI }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG



